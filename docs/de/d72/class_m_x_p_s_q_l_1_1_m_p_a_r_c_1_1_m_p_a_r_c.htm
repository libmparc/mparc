<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>MPARC: MXPSQL::MPARC::MPARC Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">MPARC<span id="projectnumber">&#160;0.1</span>
   </div>
   <div id="projectbrief">Dumb plain text based archive format in C</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">MXPSQL::MPARC::MPARC Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.  
 <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/de9/mparc_8hpp_source.htm">mparc.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6fce6b56fd88fa431d76145b7766fd20"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a6fce6b56fd88fa431d76145b7766fd20">MPARC</a> ()</td></tr>
<tr class="memdesc:a6fce6b56fd88fa431d76145b7766fd20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object in a boring manner.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a6fce6b56fd88fa431d76145b7766fd20">More...</a><br /></td></tr>
<tr class="separator:a6fce6b56fd88fa431d76145b7766fd20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84838441f8e04c2d6f05f0454daa1cea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a84838441f8e04c2d6f05f0454daa1cea">MPARC</a> (const char *path)</td></tr>
<tr class="memdesc:a84838441f8e04c2d6f05f0454daa1cea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by reading a file.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a84838441f8e04c2d6f05f0454daa1cea">More...</a><br /></td></tr>
<tr class="separator:a84838441f8e04c2d6f05f0454daa1cea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a368144033dc89f746d468825ec081537"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a368144033dc89f746d468825ec081537">MPARC</a> (std::string path)</td></tr>
<tr class="memdesc:a368144033dc89f746d468825ec081537"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by reading a file, but with C++ Strings instead of boring old C Strings.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a368144033dc89f746d468825ec081537">More...</a><br /></td></tr>
<tr class="separator:a368144033dc89f746d468825ec081537"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9224db67b6f76630e6f4c07e554f3fe3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a9224db67b6f76630e6f4c07e554f3fe3">MPARC</a> (<a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm">MPARC</a> &amp;other)</td></tr>
<tr class="memdesc:a9224db67b6f76630e6f4c07e554f3fe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by copying and plagiarising other instances.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a9224db67b6f76630e6f4c07e554f3fe3">More...</a><br /></td></tr>
<tr class="separator:a9224db67b6f76630e6f4c07e554f3fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a6ccd4573e3ebec8396b2a4e3aef5a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a16a6ccd4573e3ebec8396b2a4e3aef5a">~MPARC</a> ()</td></tr>
<tr class="memdesc:a16a6ccd4573e3ebec8396b2a4e3aef5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy the <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object and its handle.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a16a6ccd4573e3ebec8396b2a4e3aef5a">More...</a><br /></td></tr>
<tr class="separator:a16a6ccd4573e3ebec8396b2a4e3aef5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb00815a82be2adad9ca295945e25740"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d0/d4a/struct_m_x_p_s_q_l___m_p_a_r_c__t.htm">MXPSQL_MPARC_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#aeb00815a82be2adad9ca295945e25740">getInstance</a> ()</td></tr>
<tr class="memdesc:aeb00815a82be2adad9ca295945e25740"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the internal <a class="el" href="../../d0/d4a/struct_m_x_p_s_q_l___m_p_a_r_c__t.htm" title="Not the best place to find documentation for this struct, see mparc.h for better info....">MXPSQL_MPARC_t</a> instance. Use this if you use with the C Functions or you need to leverage the power of pointers.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#aeb00815a82be2adad9ca295945e25740">More...</a><br /></td></tr>
<tr class="separator:aeb00815a82be2adad9ca295945e25740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a406972582c9cf92be00b552f95a06ef0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d2a/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___iter.htm">MPARC_Iter</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a406972582c9cf92be00b552f95a06ef0">grabIterator</a> ()</td></tr>
<tr class="memdesc:a406972582c9cf92be00b552f95a06ef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grab an iterator instance.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a406972582c9cf92be00b552f95a06ef0">More...</a><br /></td></tr>
<tr class="separator:a406972582c9cf92be00b552f95a06ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbc176e04dc847a2b5e867e40fd5a6fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#adbc176e04dc847a2b5e867e40fd5a6fc">list</a> (std::vector&lt; std::string &gt; &amp;out)</td></tr>
<tr class="memdesc:adbc176e04dc847a2b5e867e40fd5a6fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">List itself to a vector.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#adbc176e04dc847a2b5e867e40fd5a6fc">More...</a><br /></td></tr>
<tr class="separator:adbc176e04dc847a2b5e867e40fd5a6fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f40bd391d69ea58fe27edd2b0528c52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a2f40bd391d69ea58fe27edd2b0528c52">push</a> (std::string filename, unsigned char *binary, <a class="el" href="../../d6/d08/mparc_8h.htm#a6dd4c5df4f9e32a9e863fc789ebaddfb">MXPSQL_MPARC_uint_repr_t</a> size)</td></tr>
<tr class="memdesc:a2f40bd391d69ea58fe27edd2b0528c52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Push a file.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a2f40bd391d69ea58fe27edd2b0528c52">More...</a><br /></td></tr>
<tr class="separator:a2f40bd391d69ea58fe27edd2b0528c52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01158ceb52b79ef54c0c4540401bb5cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a01158ceb52b79ef54c0c4540401bb5cc">push</a> (std::string filename, std::ifstream &amp;strem)</td></tr>
<tr class="memdesc:a01158ceb52b79ef54c0c4540401bb5cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Push a file stream.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a01158ceb52b79ef54c0c4540401bb5cc">More...</a><br /></td></tr>
<tr class="separator:a01158ceb52b79ef54c0c4540401bb5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ceea22405f62bc513137759bcdcc47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a51ceea22405f62bc513137759bcdcc47">push</a> (std::string filename)</td></tr>
<tr class="memdesc:a51ceea22405f62bc513137759bcdcc47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Push a file name.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a51ceea22405f62bc513137759bcdcc47">More...</a><br /></td></tr>
<tr class="separator:a51ceea22405f62bc513137759bcdcc47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5275f9e7d6b9ff07daeb745097340ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ad5275f9e7d6b9ff07daeb745097340ae">peek</a> (std::string filename, unsigned char **bout, <a class="el" href="../../d6/d08/mparc_8h.htm#a6dd4c5df4f9e32a9e863fc789ebaddfb">MXPSQL_MPARC_uint_repr_t</a> *sout)</td></tr>
<tr class="memdesc:ad5275f9e7d6b9ff07daeb745097340ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Peek the contents.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ad5275f9e7d6b9ff07daeb745097340ae">More...</a><br /></td></tr>
<tr class="separator:ad5275f9e7d6b9ff07daeb745097340ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9a513455c336dcf197851525554248f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#af9a513455c336dcf197851525554248f">rename</a> (std::string filename1, std::string filename2, bool overwrite)</td></tr>
<tr class="memdesc:af9a513455c336dcf197851525554248f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rename files.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#af9a513455c336dcf197851525554248f">More...</a><br /></td></tr>
<tr class="separator:af9a513455c336dcf197851525554248f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a425fc2543377f2d264aca1a97e13e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a3a425fc2543377f2d264aca1a97e13e4">duplicate</a> (std::string filename1, std::string filename2, bool overwrite)</td></tr>
<tr class="memdesc:a3a425fc2543377f2d264aca1a97e13e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Duplicate files.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a3a425fc2543377f2d264aca1a97e13e4">More...</a><br /></td></tr>
<tr class="separator:a3a425fc2543377f2d264aca1a97e13e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e1c6132df41f41082334b8a35cf423"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ad5e1c6132df41f41082334b8a35cf423">swap</a> (std::string filename1, std::string filename2)</td></tr>
<tr class="memdesc:ad5e1c6132df41f41082334b8a35cf423"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swap files.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ad5e1c6132df41f41082334b8a35cf423">More...</a><br /></td></tr>
<tr class="separator:ad5e1c6132df41f41082334b8a35cf423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fbad5eb88cbf14251385d57a01981fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a7fbad5eb88cbf14251385d57a01981fd">pop</a> (std::string filename)</td></tr>
<tr class="memdesc:a7fbad5eb88cbf14251385d57a01981fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pop a file off.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a7fbad5eb88cbf14251385d57a01981fd">More...</a><br /></td></tr>
<tr class="separator:a7fbad5eb88cbf14251385d57a01981fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2be5c421c8feca1f7ee1d20f9256346"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ae2be5c421c8feca1f7ee1d20f9256346">clear</a> ()</td></tr>
<tr class="memdesc:ae2be5c421c8feca1f7ee1d20f9256346"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the whole archive.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#ae2be5c421c8feca1f7ee1d20f9256346">More...</a><br /></td></tr>
<tr class="separator:ae2be5c421c8feca1f7ee1d20f9256346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78672f7055226461291fee836959b943"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a78672f7055226461291fee836959b943">construct</a> (std::string &amp;out, bool interpretation_mode)</td></tr>
<tr class="memdesc:a78672f7055226461291fee836959b943"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct archive into a string or from a file.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a78672f7055226461291fee836959b943">More...</a><br /></td></tr>
<tr class="separator:a78672f7055226461291fee836959b943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb70314f726295a2faa18bde9466b156"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#afb70314f726295a2faa18bde9466b156">construct</a> (std::ostream &amp;out)</td></tr>
<tr class="memdesc:afb70314f726295a2faa18bde9466b156"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an archive and write it to a stream.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#afb70314f726295a2faa18bde9466b156">More...</a><br /></td></tr>
<tr class="separator:afb70314f726295a2faa18bde9466b156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdd2425594802bbb58e217efeb35b583"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#acdd2425594802bbb58e217efeb35b583">extract</a> (std::string dest_dir, char **dir2make, void(*on_item)(const char *), int(*mk_dir)(char *))</td></tr>
<tr class="memdesc:acdd2425594802bbb58e217efeb35b583"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract the archive, pro edition.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#acdd2425594802bbb58e217efeb35b583">More...</a><br /></td></tr>
<tr class="separator:acdd2425594802bbb58e217efeb35b583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e1a7be460bee41e92633b66b7a3abdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a2e1a7be460bee41e92633b66b7a3abdd">extract</a> (std::string dest_dir, char **dir2make)</td></tr>
<tr class="memdesc:a2e1a7be460bee41e92633b66b7a3abdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract the archive.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a2e1a7be460bee41e92633b66b7a3abdd">More...</a><br /></td></tr>
<tr class="separator:a2e1a7be460bee41e92633b66b7a3abdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5314ce89d9fd2f73c35f215d8778f048"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a5314ce89d9fd2f73c35f215d8778f048">readdir</a> (std::string srcdir, bool recursive, int(*listdir)(const char *, int, char **))</td></tr>
<tr class="memdesc:a5314ce89d9fd2f73c35f215d8778f048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a directory.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a5314ce89d9fd2f73c35f215d8778f048">More...</a><br /></td></tr>
<tr class="separator:a5314ce89d9fd2f73c35f215d8778f048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e25ff78f713eee91953f418e8fa4a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a67e25ff78f713eee91953f418e8fa4a2">parse</a> (std::string str, bool interpretation_mode, bool erroronduplicate)</td></tr>
<tr class="memdesc:a67e25ff78f713eee91953f418e8fa4a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse an archive.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a67e25ff78f713eee91953f418e8fa4a2">More...</a><br /></td></tr>
<tr class="separator:a67e25ff78f713eee91953f418e8fa4a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78148e6cd7eb8b771760e9bf697370ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a78148e6cd7eb8b771760e9bf697370ae">parse</a> (std::ifstream &amp;strem)</td></tr>
<tr class="memdesc:a78148e6cd7eb8b771760e9bf697370ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse from a stream.  <a href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm#a78148e6cd7eb8b771760e9bf697370ae">More...</a><br /></td></tr>
<tr class="separator:a78148e6cd7eb8b771760e9bf697370ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >The C++ Object Oriented wrapper for MXPSQL_MPARC_t*. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6fce6b56fd88fa431d76145b7766fd20" name="a6fce6b56fd88fa431d76145b7766fd20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fce6b56fd88fa431d76145b7766fd20">&#9670;&#160;</a></span>MPARC() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MXPSQL::MPARC::MPARC::MPARC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object in a boring manner. </p>

</div>
</div>
<a id="a84838441f8e04c2d6f05f0454daa1cea" name="a84838441f8e04c2d6f05f0454daa1cea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84838441f8e04c2d6f05f0454daa1cea">&#9670;&#160;</a></span>MPARC() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MXPSQL::MPARC::MPARC::MPARC </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by reading a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>archive file to read </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a368144033dc89f746d468825ec081537" name="a368144033dc89f746d468825ec081537"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a368144033dc89f746d468825ec081537">&#9670;&#160;</a></span>MPARC() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MXPSQL::MPARC::MPARC::MPARC </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by reading a file, but with C++ Strings instead of boring old C Strings. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>archive file to read </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9224db67b6f76630e6f4c07e554f3fe3" name="a9224db67b6f76630e6f4c07e554f3fe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9224db67b6f76630e6f4c07e554f3fe3">&#9670;&#160;</a></span>MPARC() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MXPSQL::MPARC::MPARC::MPARC </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm">MPARC</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a new <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object by copying and plagiarising other instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a16a6ccd4573e3ebec8396b2a4e3aef5a" name="a16a6ccd4573e3ebec8396b2a4e3aef5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16a6ccd4573e3ebec8396b2a4e3aef5a">&#9670;&#160;</a></span>~MPARC()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MXPSQL::MPARC::MPARC::~MPARC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroy the <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> object and its handle. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae2be5c421c8feca1f7ee1d20f9256346" name="ae2be5c421c8feca1f7ee1d20f9256346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2be5c421c8feca1f7ee1d20f9256346">&#9670;&#160;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear the whole archive. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="afb70314f726295a2faa18bde9466b156" name="afb70314f726295a2faa18bde9466b156"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb70314f726295a2faa18bde9466b156">&#9670;&#160;</a></span>construct() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::construct </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct an archive and write it to a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">out</td><td>output stream to write into </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a78672f7055226461291fee836959b943" name="a78672f7055226461291fee836959b943"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78672f7055226461291fee836959b943">&#9670;&#160;</a></span>construct() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::construct </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>interpretation_mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct archive into a string or from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">out</td><td>output/filename </td></tr>
    <tr><td class="paramname">interpretation_mode</td><td>How to interpret out, true to put output there, false to use it as a destination filename </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a3a425fc2543377f2d264aca1a97e13e4" name="a3a425fc2543377f2d264aca1a97e13e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a425fc2543377f2d264aca1a97e13e4">&#9670;&#160;</a></span>duplicate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::duplicate </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Duplicate files. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename1</td><td>Source filename </td></tr>
    <tr><td class="paramname">filename2</td><td>Destination filename </td></tr>
    <tr><td class="paramname">overwrite</td><td>Clobber/Overwrite filename2 if it exists </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a2e1a7be460bee41e92633b66b7a3abdd" name="a2e1a7be460bee41e92633b66b7a3abdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e1a7be460bee41e92633b66b7a3abdd">&#9670;&#160;</a></span>extract() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::extract </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dest_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>dir2make</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Extract the archive. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dest_dir</td><td>destination directory </td></tr>
    <tr><td class="paramname">dir2make</td><td>What directory should I make? </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="acdd2425594802bbb58e217efeb35b583" name="acdd2425594802bbb58e217efeb35b583"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdd2425594802bbb58e217efeb35b583">&#9670;&#160;</a></span>extract() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::extract </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dest_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>dir2make</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(const char *)&#160;</td>
          <td class="paramname"><em>on_item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(char *)&#160;</td>
          <td class="paramname"><em>mk_dir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Extract the archive, pro edition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dest_dir</td><td>destination directory </td></tr>
    <tr><td class="paramname">dir2make</td><td>What directory should I make? </td></tr>
    <tr><td class="paramname">on_item</td><td>Called everytime a file is to be extracted </td></tr>
    <tr><td class="paramname">mk_dir</td><td>Make me a directory function </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="aeb00815a82be2adad9ca295945e25740" name="aeb00815a82be2adad9ca295945e25740"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb00815a82be2adad9ca295945e25740">&#9670;&#160;</a></span>getInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/d4a/struct_m_x_p_s_q_l___m_p_a_r_c__t.htm">MXPSQL_MPARC_t</a> * MXPSQL::MPARC::MPARC::getInstance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the internal <a class="el" href="../../d0/d4a/struct_m_x_p_s_q_l___m_p_a_r_c__t.htm" title="Not the best place to find documentation for this struct, see mparc.h for better info....">MXPSQL_MPARC_t</a> instance. Use this if you use with the C Functions or you need to leverage the power of pointers. </p>
<dl class="section return"><dt>Returns</dt><dd>MXPSQL_MPARC_t* pointer to the internal instance</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Whatever you do, resist the temptation to free this manually </dd></dl>

</div>
</div>
<a id="a406972582c9cf92be00b552f95a06ef0" name="a406972582c9cf92be00b552f95a06ef0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a406972582c9cf92be00b552f95a06ef0">&#9670;&#160;</a></span>grabIterator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d2a/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___iter.htm">MPARC_Iter</a> MXPSQL::MPARC::MPARC::grabIterator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Grab an iterator instance. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../da/d2a/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___iter.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_iter_t*.">MPARC_Iter</a> Yo iterator </dd></dl>

</div>
</div>
<a id="adbc176e04dc847a2b5e867e40fd5a6fc" name="adbc176e04dc847a2b5e867e40fd5a6fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbc176e04dc847a2b5e867e40fd5a6fc">&#9670;&#160;</a></span>list()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::list </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>out</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List itself to a vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">out</td><td>output vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a78148e6cd7eb8b771760e9bf697370ae" name="a78148e6cd7eb8b771760e9bf697370ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78148e6cd7eb8b771760e9bf697370ae">&#9670;&#160;</a></span>parse() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::parse </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>strem</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parse from a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">strem</td><td>the stream to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a67e25ff78f713eee91953f418e8fa4a2" name="a67e25ff78f713eee91953f418e8fa4a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67e25ff78f713eee91953f418e8fa4a2">&#9670;&#160;</a></span>parse() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::parse </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>interpretation_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>erroronduplicate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parse an archive. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>Content of the archive or filename </td></tr>
    <tr><td class="paramname">interpretation_mode</td><td>How to interpret the archive, true to interpretet as the archive content, false to interpret as a filename </td></tr>
    <tr><td class="paramname">erroronduplicate</td><td>Error out if a duplicate is found </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="ad5275f9e7d6b9ff07daeb745097340ae" name="ad5275f9e7d6b9ff07daeb745097340ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5275f9e7d6b9ff07daeb745097340ae">&#9670;&#160;</a></span>peek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::peek </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char **&#160;</td>
          <td class="paramname"><em>bout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d08/mparc_8h.htm#a6dd4c5df4f9e32a9e863fc789ebaddfb">MXPSQL_MPARC_uint_repr_t</a> *&#160;</td>
          <td class="paramname"><em>sout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Peek the contents. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>file to see </td></tr>
    <tr><td class="paramname">bout</td><td>binary content </td></tr>
    <tr><td class="paramname">sout</td><td>size of binary </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a7fbad5eb88cbf14251385d57a01981fd" name="a7fbad5eb88cbf14251385d57a01981fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fbad5eb88cbf14251385d57a01981fd">&#9670;&#160;</a></span>pop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::pop </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pop a file off. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>file to pop off </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a51ceea22405f62bc513137759bcdcc47" name="a51ceea22405f62bc513137759bcdcc47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ceea22405f62bc513137759bcdcc47">&#9670;&#160;</a></span>push() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::push </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Push a file name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>file to push </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a01158ceb52b79ef54c0c4540401bb5cc" name="a01158ceb52b79ef54c0c4540401bb5cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01158ceb52b79ef54c0c4540401bb5cc">&#9670;&#160;</a></span>push() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::push </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>strem</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Push a file stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>file to push </td></tr>
    <tr><td class="paramname">strem</td><td>stream to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a2f40bd391d69ea58fe27edd2b0528c52" name="a2f40bd391d69ea58fe27edd2b0528c52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f40bd391d69ea58fe27edd2b0528c52">&#9670;&#160;</a></span>push() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::push </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>binary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d08/mparc_8h.htm#a6dd4c5df4f9e32a9e863fc789ebaddfb">MXPSQL_MPARC_uint_repr_t</a>&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Push a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>file to push </td></tr>
    <tr><td class="paramname">binary</td><td>content of file </td></tr>
    <tr><td class="paramname">size</td><td>size of binary </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="a5314ce89d9fd2f73c35f215d8778f048" name="a5314ce89d9fd2f73c35f215d8778f048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5314ce89d9fd2f73c35f215d8778f048">&#9670;&#160;</a></span>readdir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::readdir </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>srcdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>recursive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(const char *, int, char **)&#160;</td>
          <td class="paramname"><em>listdir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read a directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">srcdir</td><td>directory to read </td></tr>
    <tr><td class="paramname">recursive</td><td>recursive read? </td></tr>
    <tr><td class="paramname">listdir</td><td>function to deal with directory reading </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success?</dd></dl>
<blockquote class="doxtable">
<p >&zwj;listdir Prototyping </p>
</blockquote>
<p>the first parameter of the listdir function is the current directory that should be read from</p>
<p >the second parameter indicates if it should be recursive, its set to 0 if not, set to a non zero value (this implementation sets it to 1) if not</p>
<p >the third parameter is what files it has found, should be an array of string, terminated with NULL and Calloc'ed or Malloc'ed (pls Calloc it) (Also please use the <a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_t*.">MPARC</a> allocation functions instead of the standard libc ones) as it relies on finding NULL and the array getting freed</p>
<p >the return value should always be 0 for success, other values indicate failure </p>

</div>
</div>
<a id="af9a513455c336dcf197851525554248f" name="af9a513455c336dcf197851525554248f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9a513455c336dcf197851525554248f">&#9670;&#160;</a></span>rename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::rename </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rename files. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename1</td><td>Old filename </td></tr>
    <tr><td class="paramname">filename2</td><td>New filename </td></tr>
    <tr><td class="paramname">overwrite</td><td>Clobber/Overwrite filename2 if it exists? </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<a id="ad5e1c6132df41f41082334b8a35cf423" name="ad5e1c6132df41f41082334b8a35cf423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5e1c6132df41f41082334b8a35cf423">&#9670;&#160;</a></span>swap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm">MPARC_Error</a> MXPSQL::MPARC::MPARC::swap </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Swap files. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename1</td><td>swap victim </td></tr>
    <tr><td class="paramname">filename2</td><td>another swap victim </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="../../df/d18/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c___error.htm" title="The C++ Object Oriented wrapper for MXPSQL_MPARC_err.">MPARC_Error</a> Success? </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="../../dd/de9/mparc_8hpp_source.htm">mparc.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>MXPSQL</b></li><li class="navelem"><b>MPARC</b></li><li class="navelem"><a class="el" href="../../de/d72/class_m_x_p_s_q_l_1_1_m_p_a_r_c_1_1_m_p_a_r_c.htm">MPARC</a></li>
    <li class="footer">Generated on Thu Dec 8 2022 18:31:50 for MPARC by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
  </ul>
</div>
</body>
</html>
