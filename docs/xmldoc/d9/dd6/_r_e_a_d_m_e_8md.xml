<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="d9/dd6/_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>MPARC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Logo<sp/>is<sp/>the<sp/>MPARC<sp/>archive<sp/>behind<sp/>an<sp/>#ffffff<sp/>background<sp/>lmao](./img/logo.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">MPAR<sp/>archive<sp/>reimplemented<sp/>in<sp/>C<sp/>instead<sp/>of<sp/>C++,<sp/>more<sp/>advanced<sp/>than<sp/>before.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Enough<sp/>of<sp/>the<sp/>boring<sp/>stuff</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Why<sp/>should<sp/>I<sp/>use<sp/>this<sp/>library<sp/>and<sp/>archive<sp/>format</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>archive<sp/>format,<sp/>but<sp/>not<sp/>just<sp/>that.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">It&apos;s<sp/>in<sp/>plain<sp/>text!<sp/>Not<sp/>any<sp/>plain<sp/>text,<sp/>ASCII<sp/>plain<sp/>text!<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">Even<sp/>binary<sp/>files<sp/>are<sp/>in<sp/>plain<sp/>text<sp/>because<sp/>we<sp/>use<sp/>Base64<sp/>encoding<sp/>on<sp/>them!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>manipulate<sp/>and<sp/>extract<sp/>these<sp/>archives<sp/>with<sp/>a<sp/>text<sp/>editor,<sp/>a<sp/>crc32<sp/>encoder<sp/>(decoder<sp/>optional,<sp/>but<sp/>good<sp/>for<sp/>checks)<sp/>and<sp/>a<sp/>base64<sp/>encoder/decoder!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Versatile!<sp/>You<sp/>can<sp/>make<sp/>it<sp/>into<sp/>a<sp/>key<sp/>value<sp/>database<sp/>store<sp/>somehow.<sp/>Can<sp/>store<sp/>literal<sp/>bytes<sp/>of<sp/>structs<sp/>(uh<sp/>oh<sp/>endian<sp/>problems)!</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Why<sp/>shouldn&apos;t<sp/>I<sp/>use<sp/>this<sp/>library<sp/>and<sp/>archive<sp/>format</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>code<sp/>I<sp/>wrote<sp/>may<sp/>not<sp/>be<sp/>up<sp/>to<sp/>quality<sp/>control.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>This<sp/>code<sp/>pulls<sp/>in<sp/>libc<sp/>and<sp/>uses<sp/>dynamic<sp/>allocation.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Calloc<sp/>hater?<sp/>Not<sp/>for<sp/>you,<sp/>this<sp/>library<sp/>is<sp/>proliferated<sp/>with<sp/>calloc<sp/>calls.<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Oh<sp/>also<sp/>the<sp/>archives<sp/>are<sp/>bigger<sp/>than<sp/>zip<sp/>or<sp/>tar<sp/>as<sp/>they<sp/>are<sp/>binary<sp/>based<sp/>and<sp/>this<sp/>format<sp/>is<sp/>plain<sp/>text<sp/>based<sp/>and<sp/>plain<sp/>text<sp/>files<sp/>are<sp/>larger<sp/>than<sp/>binary<sp/>files.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Teach<sp/>me<sp/>how<sp/>to<sp/>build<sp/>it</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>only<sp/>need<sp/>libc<sp/>for<sp/>standard<sp/>functions,<sp/>but<sp/>(the<sp/>boehm<sp/>garbage<sp/>collector/dmalloc)<sp/>can<sp/>be<sp/>used<sp/>to<sp/>debug<sp/>memory<sp/>issues.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>Also<sp/>this<sp/>can<sp/>be<sp/>built<sp/>with<sp/>the<sp/>old<sp/>makefile<sp/>(Makefile.dumb)<sp/>(trust<sp/>me,<sp/>I<sp/>am<sp/>the<sp/>old<sp/>method),<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">autotools<sp/>(Less<sp/>broken,<sp/>but<sp/>still<sp/>yes<sp/>you<sp/>need<sp/>to<sp/>make<sp/>it<sp/>yourself)<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">or<sp/>CMake<sp/>(it<sp/>works,<sp/>please<sp/>do<sp/>it<sp/>in<sp/>the<sp/>build/<sp/>directory).</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>How<sp/>can<sp/>I<sp/>implement<sp/>this<sp/>format<sp/>in<sp/>my<sp/>own<sp/>method?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Go<sp/>to<sp/>[the<sp/>source<sp/>code](./mparc.c)<sp/>and<sp/>find<sp/>the<sp/>MPARC_construct_str<sp/>function<sp/>body,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">there<sp/>is<sp/>the<sp/>instruction<sp/>there<sp/>for<sp/>you<sp/>on<sp/>how<sp/>to<sp/>construct<sp/>the<sp/>archive<sp/>by<sp/>hand,<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">you<sp/>can<sp/>also<sp/>use<sp/>the<sp/>hand<sp/>construction<sp/>instructions<sp/>to<sp/>make<sp/>your<sp/>own<sp/>library.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>also<sp/>know<sp/>how<sp/>to<sp/>parse<sp/>the<sp/>file<sp/>just<sp/>by<sp/>looking<sp/>at<sp/>the<sp/>specification<sp/>on<sp/>file<sp/>construction.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Read<sp/>those<sp/>instructions,<sp/>think<sp/>about<sp/>parsing<sp/>it<sp/>and<sp/>putting<sp/>it<sp/>together<sp/>and<sp/>there<sp/>you<sp/>have<sp/>your<sp/>own<sp/>library<sp/>implementation!<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">Or<sp/>just<sp/>copy<sp/>my<sp/>code<sp/>and<sp/>say<sp/>it<sp/>is<sp/>yours<sp/>(HEY!).</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>How<sp/>can<sp/>I<sp/>make<sp/>bindings<sp/>to<sp/>my<sp/>own<sp/>language?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>make<sp/>it<sp/>yourself,<sp/>or<sp/>use<sp/>[SWIG](./mparc.swigi)!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">However,<sp/>you<sp/>want<sp/>C++?<sp/>You<sp/>can<sp/>use<sp/>the<sp/>C<sp/>functions<sp/>immediately!</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
